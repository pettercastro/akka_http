<!--
  ~ Based in the https://github.com/scalastyle/scalastyle/blob/master/lib/scalastyle_config.xml
  ~ Documentation in each checker supported at:
  ~ http://www.scalastyle.org/rules-dev.html
  -->
<!-- If you wish to turn off checking for a section of code, you can put a comment in the source
 before and after the section, with the following syntax: -->
<!-- // scalastyle:off -->
<!-- ... -->
<!-- // naughty stuff -->
<!-- ... -->
<!-- // scalastyle:on -->
<scalastyle>
 <name>Scalastyle standard configuration</name>
 <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxFileLength"><![CDATA[800]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[120]]></parameter>
   <parameter name="tabSize"><![CDATA[2]]></parameter>
  </parameters>
 </check>

 <!-- ************************************* CURRENT *************************************** -->
 <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[10]]></parameter>
  </parameters>
 </check>

 <!-- ************************************* SCALA STYLE *************************************** -->
 <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
  <parameters>
   <parameter name="maximum"><![CDATA[10]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
  <parameters>
   <parameter name="maxTypes"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
  <parameters>
   <parameter name="maxMethods"><![CDATA[30]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLength"><![CDATA[50]]></parameter>
  </parameters>
 </check>

 <!-- ************************************* IMPORT RULES *************************************** -->
 <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
  <parameters>
   <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
  </parameters>
 </check>
 <!-- Imports at the top of the file -->
 <check enabled="true" class="org.scalastyle.scalariform.ImportGroupingChecker" level="warning"/>
 <!-- Imports grouped and ordered -->
 <check enabled="true" class="org.scalastyle.scalariform.ImportOrderChecker" level="warning">
  <parameters>
   <parameter name="groups">java,scala,others,origami</parameter>
   <parameter name="group.java">javax?\..+</parameter>
   <parameter name="group.scala">scala\..+</parameter>
   <parameter name="group.others">^(?!com\.origami\.).+</parameter>
   <parameter name="group.origami">com\.origami\..+</parameter>
  </parameters>
 </check>

 <!-- ************************************* CONTROL STRUCTURES *************************************** -->
 <check enabled="true" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" level="warning"/>
 <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
   <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
  </parameters>
 </check>

 <!-- ******************************* NAMING CONVENTIONS ********************************* -->
 <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.FieldNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
   <parameter name="objectFieldRegex"><![CDATA[^[A-Z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>

 <!-- ********************************* CLEAN AND READABLE CODE ************************************* -->
 <check enabled="true" class="org.scalastyle.scalariform.RedundantIfChecker" level="warning"/>
 <check class="org.scalastyle.scalariform.EmptyClassChecker" level="warning" enabled="true"></check>
 <check enabled="true" class="org.scalastyle.scalariform.NotImplementedErrorUsage" level="warning"/>
 <check enabled="true" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" level="warning"/>
 <check class="org.scalastyle.scalariform.ForBraceChecker" level="warning" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check class="org.scalastyle.scalariform.ClassTypeParameterChecker" level="warning" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
  </parameters>
 </check>

 <!-- ******************************* FUNCTIONAL PROGRAMMING ******************************* -->
 <check class="org.scalastyle.scalariform.WhileChecker" level="warning" enabled="false"></check>
 <check class="org.scalastyle.scalariform.VarFieldChecker" level="warning" enabled="false"></check>
 <check class="org.scalastyle.scalariform.VarLocalChecker" level="warning" enabled="false"></check>
</scalastyle>